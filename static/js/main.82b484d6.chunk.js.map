{"version":3,"sources":["components/Views/Login/Login.js","components/componets/NavBar/Navbar.js","components/componets/ModalNotes/ModalNotes.js","components/componets/User/UserTab.js","components/Views/Home/Home.js","App.js","serviceWorker.js","index.js","keyFirebase.js"],"names":["Login","useState","userName","password","User","setUser","history","useHistory","login","firebase","signInWithEmailAndPassword","then","resolve","console","log","user","email","localStorage","setItem","push","catch","error","alert","handleChangeInput","e","inputName","target","name","inputValue","value","className","style","height","onSubmit","evt","preventDefault","htmlFor","type","id","aria-describedby","onChange","Navbar","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-haspopup","getItem","aria-labelledby","onClick","signOut","ModalNotes","userData","questions","useEffect","tabIndex","role","aria-hidden","lastName","data-dismiss","Object","values","answers","map","value1","i","Array","isArray","question","entries","options","option","rating","UserTab","UsersData","UserData","setUserData","scope","jsonFirebase","reduce","accumulator","currentValue","Home","Users","setUsers","Questions","setQuestions","ref","child","on","snapshot","val","App","fetch","exact","path","Boolean","window","location","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.82b484d6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n//importo firebase\nimport * as firebase from \"firebase\";\n\nexport default function Login() {\n  const [User, setUser] = useState({ userName: \"\", password: \"\" });\n  const history = useHistory();\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    login();\n  }\n\n  const login = () => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(User.userName, User.password)\n      .then((resolve) => {\n        /* console.log(resolve.user.email); */\n        console.log(resolve.user.email);\n        localStorage.setItem(\"email\",resolve.user.email);\n        history.push(\"/home\");\n      })\n      .catch(function (error) {\n        // Handle Errors here.\n        alert(\"No se pudo iniciar sesion\");\n        // ...\n      });\n  };\n\n  function handleChangeInput(e) {\n    const inputName = e.target.name;\n    const inputValue = e.target.value;\n    inputName == \"userName\"\n      ? setUser({ ...User, userName: inputValue })\n      : setUser({ ...User, password: inputValue });\n  }\n\n  return (\n    <div className=\"container-fluid vh-100\">\n      <div className=\"row justify-content-center h-100\">\n        <div className=\"col-md-6 d-flex align-items-center\">\n          <div className=\"card shadow w-100\" style={{ height: \"16em\" }}>\n            <div className=\"card-body\">\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"usuario\">Usuario</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"usuario\"\n                    aria-describedby=\"emailHelp\"\n                    name=\"userName\"\n                    onChange={handleChangeInput}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"Password\">Contrase√±a</label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    id=\"Password\"\n                    onChange={handleChangeInput}\n                  />\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mb-2\"\n                >\n                  Ingresar\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n//importo firebase\nimport * as firebase from \"firebase\";\n\nexport default function Navbar() {\n  const history = useHistory();\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <Link className=\"navbar-brand\" to=\"/home\">\n        Empresa\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarTogglerDemo02\"\n        aria-controls=\"navbarTogglerDemo02\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n        <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n          <li className=\"nav-item active\">\n            <Link className=\"nav-link\" to=\"/\">\n              Home <span className=\"sr-only\">(current)</span>\n            </Link>\n          </li>\n          {/* <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/\">\n              Link\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link disabled\"\n              to=\"/\"\n              tabIndex=\"-1\"\n              aria-disabled=\"true\"\n            >\n              Disabled\n            </Link>\n          </li> */}\n        </ul>\n        <div className=\"dropdown\">\n          <button\n            className=\"btn btn-secondary dropdown-toggle my-2 my-lg-0\"\n            type=\"button\"\n            id=\"dropdownMenuButton\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            {localStorage.getItem(\"email\")}\n          </button>\n          <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n            <Link\n              className=\"dropdown-item\"\n              onClick={() => {\n                firebase\n                  .auth()\n                  .signOut()\n                  .then(function () {\n                    // Sign-out successful.\n                    history.push(\"/\");\n                  })\n                  .catch(function (error) {\n                    // An error happened.\n                  });\n              }}\n            >\n              Cerrar sesion\n            </Link>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nexport default function ModalNotes({ userData, questions }) {\n  useEffect(() => {\n    console.log(questions);\n  }, [questions]);\n  return (\n    <div\n      className=\"modal fade\"\n      id=\"exampleModal\"\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"exampleModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n              {`${userData?.name} ${userData?.lastName}`}\n            </h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <h3>Preguntas de seleccion multiple</h3>\n            <ul>\n              {Object.values(userData?.answers).map((value1, i) => {\n                return (\n                  <li>\n                    {i + 1}-\n                    {Array.isArray(questions) ? questions[i + 1].question : \"\"}\n                    {Array.isArray(questions)\n                      ? Object.entries(questions[i + 1].options).map(\n                          (value, i) => {\n                            return (\n                              <ul>\n                                {value1.option === value[0] ? (\n                                  value1.rating !== 1 ? (\n                                    <li className=\"bg-danger\">\n                                      {value[0]} - {value[1]}\n                                    </li>\n                                  ) : (\n                                    <li className=\"bg-success\">\n                                      {value[0]} - {value[1]}\n                                    </li>\n                                  )\n                                ) : (\n                                  <li>\n                                    {value[0]} - {value[1]}\n                                  </li>\n                                )}\n                              </ul>\n                            );\n                          }\n                        )\n                      : \"\"}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n          {/* <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-dismiss=\"modal\"\n            >\n              Close\n            </button>\n            <button type=\"button\" className=\"btn btn-primary\">\n              Save changes\n            </button>\n          </div> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\n//import modal\nimport ModalNotes from \"../ModalNotes/ModalNotes\";\n\nexport default function UserTab({ UsersData, questions }) {\n  const [UserData, setUserData] = useState({\n    lastName: \"\",\n    name: \"\",\n    answers: [{ rating: 0, option: \"\" }],\n  });\n\n  const changeUser = (user) => {\n    setUserData(user);\n  };\n  const rating = (jsonFirebase) => {\n    return Object.values(jsonFirebase)\n      .map((value) => value)\n      .map((value) => value.rating)\n      .reduce((accumulator, currentValue) => accumulator + currentValue);\n  };\n  return (\n    <>\n      <ModalNotes userData={UserData} questions={questions}></ModalNotes>\n      <div className=\"table-responsive-lg\">\n        <table className=\"table\">\n          <thead className=\"thead-dark\">\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Nombre</th>\n              <th scope=\"col\">Apellido</th>\n              <th scope=\"col\">Calificacion</th>\n              <th scope=\"col\"></th>\n            </tr>\n          </thead>\n          <tbody>\n            {Object.values(UsersData).map((value, i) => {\n              return (\n                <tr>\n                  <th scope=\"row\">{i + 1}</th>\n                  <td>{value.name}</td>\n                  <td>{value.lastName}</td>\n                  <td>{rating(value.answers)}</td>\n                  <td>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-secondary btn-sm\"\n                      data-toggle=\"modal\"\n                      data-target=\"#exampleModal\"\n                      onClick={() => {\n                        changeUser(value);\n                      }}\n                    >\n                      Ver mas\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Navbar from \"../../componets/NavBar/Navbar\";\nimport UserTab from \"../../componets/User/UserTab\";\n//importo firebase\nimport * as firebase from \"firebase\";\n\nexport default function Home() {\n  const [Users, setUsers] = useState({});\n  const [Questions, setQuestions] = useState({});\n\n  useEffect(() => {\n    const ref =firebase\n    .database()\n    .ref();\n    \n      ref.child(\"users\")\n      .on(\"value\", (snapshot) => {\n        setUsers(snapshot.val());\n      });\n      ref.child(\"questions\")\n      .on(\"value\", (snapshot) => {\n        setQuestions(snapshot.val());\n      });\n  }, []);\n\n  return (\n    <>\n      <Navbar></Navbar>\n      <div className=\"container mt-4\">\n        <h3>Calificaciones de usuarios</h3>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <UserTab UsersData={Users} questions={Questions}></UserTab>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n//importacion de bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\n//views\nimport Login from \"./components/Views/Login/Login\";\nimport Home from \"./components/Views/Home/Home\";\n\nfunction App() {\n  useEffect(() => {\n    fetch(\"https://vr-web-admin.firebaseio.com/questions.json\");\n  }, []);\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/home\">\n          <Home />\n        </Route>\n        <Route exact path=\"/\">\n          <Login />\n        </Route>\n        <Router path=\"*\">\n        </Router>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//importacion de firebase\nimport * as firebase from 'firebase';\nimport {config} from \"./keyFirebase\"\n\nfirebase.initializeApp(config);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const config = {\n  apiKey: \"AIzaSyA3Gkt6AcTUQnbipSfIOEsD3Q9-a-OCosY\",\n  authDomain: \"vr-web-admin.firebaseapp.com\",\n  databaseURL: \"https://vr-web-admin.firebaseio.com\",\n  projectId: \"vr-web-admin\",\n  storageBucket: \"vr-web-admin.appspot.com\",\n  messagingSenderId: \"1043041595425\",\n  appId: \"1:1043041595425:web:edeb929f4faccc32bc7360\",\n};\n"],"sourceRoot":""}